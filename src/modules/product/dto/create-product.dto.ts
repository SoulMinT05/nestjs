import {
  IsBoolean,
  IsNotEmpty,
  IsNumber,
  IsOptional,
  IsString,
  IsArray,
} from 'class-validator';

export class CreateProductDto {
  @IsString({ message: 'T√™n ph·∫£i l√† k√Ω t·ª±' })
  @IsNotEmpty({ message: 'C·∫ßn nh·∫≠p t√™n' })
  name: string;

  @IsOptional()
  @IsString({ message: 'M√¥ t·∫£ ph·∫£i l√† k√Ω t·ª±' })
  description?: string;

  @IsString({ message: 'Th∆∞∆°ng hi·ªáu ph·∫£i l√† k√Ω t·ª±' })
  @IsNotEmpty({ message: 'C·∫ßn nh·∫≠p th∆∞∆°ng hi·ªáu' })
  brand: string;

  @IsNumber({}, { message: 'categoryId ph·∫£i l√† k√Ω t·ª±' })
  @IsNotEmpty({ message: 'C·∫ßn ch·ªçn danh m·ª•c' })
  categoryId: number;

  @IsString({ message: 'categoryName ph·∫£i l√† k√Ω t·ª±' })
  @IsNotEmpty({ message: 'C·∫ßn ch·ªçn danh m·ª•c' })
  categoryName: string;

  @IsOptional()
  @IsNumber()
  subCategoryId?: number;

  @IsOptional()
  @IsString()
  subCategoryName?: string;

  @IsOptional()
  @IsNumber()
  thirdSubCategoryId?: number;

  @IsOptional()
  @IsString()
  thirdSubCategoryName?: string;

  @IsNumber({}, { message: 'Gi√° ph·∫£i l√† s·ªë' })
  oldPrice: number;

  @IsNumber({}, { message: 'Gi·∫£m gi√° ph·∫£i l√† s·ªë' })
  discount: number;

  // üè∑Ô∏è ·∫¢nh
  @IsOptional()
  @IsArray({ message: '·∫¢nh ph·∫£i l√† m·ªôt m·∫£ng' })
  @IsString({ each: true })
  images?: string[];

  @IsOptional()
  @IsArray({ message: 'productSizes ph·∫£i l√† m·ªôt m·∫£ng' })
  @IsString({ each: true })
  productSizes?: string[];

  // üè∑Ô∏è T·ªìn kho & th√¥ng tin ph·ª•
  @IsOptional()
  @IsNumber({}, { message: 'S·ªë l∆∞·ª£ng t·ªìn kho ph·∫£i l√† s·ªë' })
  countInStock?: number;

  @IsOptional()
  @IsNumber()
  quantitySold?: number;

  @IsOptional()
  @IsNumber()
  averageRating?: number;

  @IsOptional()
  @IsNumber()
  reviewCount?: number;

  // üè∑Ô∏è C·ªù hi·ªÉn th·ªã
  @IsOptional()
  @IsBoolean()
  isFeatured?: boolean;

  @IsOptional()
  @IsBoolean()
  isPublished?: boolean;
}
